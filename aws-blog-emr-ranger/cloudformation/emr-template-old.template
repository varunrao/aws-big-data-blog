{
    "Description": "CloudFormation template for creating an EMR cluster",
    "Outputs": {
        "IPAddress": {
            "Description": "IP address of EMR cluster MasterNode",
            "Value": {
                "Fn::GetAtt": [
                    "EMRSampleCluster",
                    "MasterPublicDNS"
                ]
            }
        }
    },
    "Parameters": {
        "myDirectoryBindUser": {
          "Description": "BindUser Simple AD server",
          "Type": "String",
          "AllowedValues" : ["binduser@corp.emr.local"],
          "Default": "binduser@corp.emr.local"
        },
        "myDirectoryBindPassword": {
          "Description": "BindPassword Simple AD server",
          "Type": "String",
          "AllowedValues" : ["Bind@User123"],
          "Default": "Bind@User123"
        },
        "CoreInstanceCount": {
            "Default": "3",
            "Description": "Number of core instances",
            "Type": "Number"
        },
        "CoreInstanceType": {
            "Default": "m3.2xlarge",
            "Description": "Instance Type of the core node",
            "Type": "String"
        },
        "EMRClusterName": {
            "Default": "SecurityPOCCluster",
            "Description": "Cluster name for the EMR",
            "Type": "String"
        },
        "EMRLogDir": {
            "Description": "Log Dir for the EMR cluster",
            "Type": "String"
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH to the instances",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "LDAPServerIP": {
            "Description": "IP address of the LDAP server",
            "Type": "String"
        },
        "MasterInstanceType": {
            "Default": "m3.2xlarge",
            "Description": "Instance Type of the master node",
            "Type": "String"
        },
        "RangerHostname": {
            "Description": "Internal IP address of the Ranger Server",
            "Type": "String"
        },
        "Subnet": {
            "Description": "Subnet ID for creating the EMR cluster",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "VPC": {
            "Description": "VPC ID for creating the EMR cluster",
            "Type": "AWS::EC2::VPC::Id"
        },
        "emrReleaseLabel": {
            "Default": "emr-5.4.0",
            "AllowedValues" : ["emr-5.0.0","emr-5.4.0", "emr-5.16.0", "emr-5.17.0"],
            "Description": "Release label for the EMR cluster",
            "Type": "String"
        },
        "rangerVersion": {
            "Default": "0.7",
            "Description": "Version of the Ranger Server.",
            "Type": "String",
            "AllowedValues" : ["0.6", "0.7", "1.0"]
        },
       "s3artifactsRepo": {
	       "Default": "s3://aws-bigdata-blog/artifacts/aws-blog-emr-ranger",
	       "Description": "Git Repo URL for this blog.",
	       "Type": "String"
     	}
    },
    "Resources": {
        "EMRSampleCluster": {
            "Properties": {
                "Applications": [
                    {
                        "Name": "Hive"
                    },
                    {
                        "Name": "Spark"
                    },
                    {
                        "Name": "Hue"
                    }
                ],
                "BootstrapActions": [
                    {
                        "Name": "Download scripts",
                        "ScriptBootstrapAction": {
                            "Path": {
                  			"Fn::Join": ["", [{"Ref" : "s3artifactsRepo"}, "/scripts/download-scripts.sh"]]},
                            "Args": [{ "Ref" : "s3artifactsRepo" }]
                        }
                    }
                ],
                "Configurations": [
                    {
                        "Classification": "hue-ini",
                        "Configurations": [
                            {
                                "Classification": "desktop",
                                "Configurations": [
                                    {
                                        "Classification": "auth",
                                        "ConfigurationProperties": {
                                            "backend": "desktop.auth.backend.LdapBackend"
                                        }
                                    },
                                    {
                                        "Classification": "ldap",
                                        "ConfigurationProperties": {
                                            "base_dn": "dc=corp,dc=emr,dc=local",
                                            "bind_dn": { "Ref" : "myDirectoryBindUser" },
                                            "bind_password": { "Ref" : "myDirectoryBindPassword" },
                                            "create_users_on_login": "true",
                                            "debug": "true",
                                            "force_username_lowercase": "true",
                                            "ignore_username_case": "true",
                                            "ldap_url": { "Fn::Join": [
                                                            "",
                                                            [
                                                                "ldap://",
                                                                { "Ref" : "LDAPServerIP" }
                                                            ]
                                                        ]
                                                        },
                                            "ldap_username_pattern": "uid=<username>,cn=users,dc=corp,dc=emr,dc=local",
                                            "nt_domain": "corp.emr.local",
                                            "search_bind_authentication": "false",
                                            "trace_level": "0"
                                        },
                                        "Configurations": [
                                            {
                                                "Classification": "groups",
                                                "ConfigurationProperties": {
                                                    "group_filter": "objectclass=*",
                                                    "group_name_attr": "cn"
                                                }
                                            },
                                            {
                                                "Classification": "users",
                                                "ConfigurationProperties": {
                                                    "user_filter": "objectclass=*",
                                                    "user_name_attr": "sAMAccountName"
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "Classification": "core-site",
                        "ConfigurationProperties": {
                                "hadoop.security.group.mapping": "org.apache.hadoop.security.LdapGroupsMapping",
                              "hadoop.security.group.mapping.ldap.bind.user": { "Ref" : "myDirectoryBindUser" },
                              "hadoop.security.group.mapping.ldap.bind.password": { "Ref" : "myDirectoryBindPassword" },
                              "hadoop.security.group.mapping.ldap.url": { "Fn::Join": [
                                                            "",
                                                            [
                                                                "ldap://",
                                                                { "Ref" : "LDAPServerIP" }
                                                            ]
                                                        ]
                                                        },
                              "hadoop.security.group.mapping.ldap.base": "dc=corp,dc=emr,dc=local",
                              "hadoop.security.group.mapping.ldap.search.filter.user": "(objectclass=*)",
                              "hadoop.security.group.mapping.ldap.search.filter.group": "(objectclass=*)",
                              "hadoop.security.group.mapping.ldap.search.attr.member": "member",
                              "hadoop.security.group.mapping.ldap.search.attr.group.name": "cn"
                        }
                    }
                ],
                "Instances": {
                    "CoreInstanceGroup": {
                        "EbsConfiguration": {
                            "EbsBlockDeviceConfigs": [
                                {
                                    "VolumeSpecification": {
                                        "SizeInGB": "10",
                                        "VolumeType": "gp2"
                                    },
                                    "VolumesPerInstance": "1"
                                }
                            ],
                            "EbsOptimized": "true"
                        },
                        "InstanceCount": {
                            "Ref": "CoreInstanceCount"
                        },
                        "InstanceType": {
                            "Ref": "CoreInstanceType"
                        },
                        "Market": "ON_DEMAND",
                        "Name": "Core Instance"
                    },
                    "Ec2KeyName": {
                        "Ref": "KeyName"
                    },
                    "Ec2SubnetId": {
                        "Ref": "Subnet"
                    },
                    "MasterInstanceGroup": {
                        "InstanceCount": "1",
                        "InstanceType": {
                            "Ref": "MasterInstanceType"
                        },
                        "Market": "ON_DEMAND",
                        "Name": "Master Instance"
                    },
                    "TerminationProtected": "false"
                },
                "JobFlowRole": "EMR_EC2_DefaultRole",
                "LogUri": {
                    "Ref": "EMRLogDir"
                },
                "Name": {
                    "Ref": "EMRClusterName"
                },
                "ReleaseLabel": {
                    "Ref": "emrReleaseLabel"
                },
                "ServiceRole": "EMR_DefaultRole",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "EMR Sample Cluster"
                    }
                ],
                "VisibleToAllUsers": "true"
            },
            "Type": "AWS::EMR::Cluster"
        },
        "CreateHiveTables": {
            "Properties": {
                "ActionOnFailure": "CONTINUE",
                "HadoopJarStep": {
                    "Args": [
                        "/mnt/tmp/aws-blog-emr-ranger/scripts/emr-steps/createHiveTables.sh",
                        {
                          "Ref" : "AWS::Region"
                        }
                    ],
                    "Jar": "s3://elasticmapreduce/libs/script-runner/script-runner.jar",
                    "MainClass": ""
                },
                "JobFlowId": {
                    "Ref": "EMRSampleCluster"
                },
                "Name": "CreateHiveTables"
            },
            "Type": "AWS::EMR::Step"
        },
        "InstallRangerPlugin": {
            "Properties": {
                "ActionOnFailure": "CONTINUE",
                "HadoopJarStep": {
                    "Args": [
                        "/mnt/tmp/aws-blog-emr-ranger/scripts/emr-steps/install-hive-hdfs-ranger-plugin.sh",
                        {
                            "Ref": "RangerHostname"
                        },
                        {
                            "Ref": "rangerVersion"
                        },
                        {
                            "Ref": "s3artifactsRepo"
                        }
                    ],
                    "Jar": "s3://elasticmapreduce/libs/script-runner/script-runner.jar",
                    "MainClass": ""
                },
                "JobFlowId": {
                    "Ref": "EMRSampleCluster"
                },
                "Name": "InstallRangerPlugin"
            },
            "Type": "AWS::EMR::Step"
        },
        "InstallRangerPolicies": {
            "Properties": {
                "ActionOnFailure": "CONTINUE",
                "HadoopJarStep": {
                    "Args": [
                        "/mnt/tmp/aws-blog-emr-ranger/scripts/emr-steps/install-hive-hdfs-ranger-policies.sh",
                        {
                            "Ref": "RangerHostname"
                        },
                        {
                  			"Fn::Join": ["", [{ "Ref": "s3artifactsRepo"}, "/inputdata"]]
                     	}
                    ],
                    "Jar": "s3://elasticmapreduce/libs/script-runner/script-runner.jar",
                    "MainClass": ""
                },
                "JobFlowId": {
                    "Ref": "EMRSampleCluster"
                },
                "Name": "InstallRangerPolicies"
            },
            "Type": "AWS::EMR::Step"
        },
        "LoadHDFSData": {
            "Properties": {
                "ActionOnFailure": "CONTINUE",
                "HadoopJarStep": {
                    "Args": [
                        "/mnt/tmp/aws-blog-emr-ranger/scripts/emr-steps/loadDataIntoHDFS.sh",
                        {
                          "Ref" : "AWS::Region"
                        }
                    ],
                    "Jar": "s3://elasticmapreduce/libs/script-runner/script-runner.jar",
                    "MainClass": ""
                },
                "JobFlowId": {
                    "Ref": "EMRSampleCluster"
                },
                "Name": "LoadHDFSData"
            },
            "Type": "AWS::EMR::Step"
        },
        "SparkStep": {
            "Properties": {
                "ActionOnFailure": "CONTINUE",
                "HadoopJarStep": {
                    "Args": [
                        "spark-submit",
                        "--deploy-mode",
                        "cluster",
                        "--class",
                        "org.apache.spark.examples.SparkPi",
                        "/usr/lib/spark/examples/jars/spark-examples.jar",
                        "10"
                    ],
                    "Jar": "command-runner.jar",
                    "MainClass": ""
                },
                "JobFlowId": {
                    "Ref": "EMRSampleCluster"
                },
                "Name": "SparkStep"
            },
            "Type": "AWS::EMR::Step"
        }
    }
}